openapi: 3.0.0
info:
  title: Examination Backend
  version: 1.0.0
  description: API documentation with Swagger UI

servers:
  - url: http://localhost:5000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        title:
          type: string
        text:
          type: string
        created_at:
          type: string
          format: date-time
        modified_at:
          type: string
          format: date-time

    NoteInput:
      type: object
      required:
        - title
        - text
      properties:
        title:
          type: string
        text:
          type: string
    SignupInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            email:
              type: string

security:
  - bearerAuth: []

paths:
  /users:
    get:
      summary: Default user route
      tags: [Users]
      responses:
        "200":
          description: Default response for user route
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Server error

  /users/signup:
    post:
      summary: Register a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupInput"
      responses:
        "201":
          description: User successfully created and token returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Missing credentials
        "409":
          description: Email already registered
        "500":
          description: Server error

  /users/login:
    post:
      summary: Login an existing user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "200":
          description: User logged in and token returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Missing credentials
        "404":
          description: Email not found
        "401":
          description: Password does not match
        "500":
          description: Server error

  /notes:
    get:
      summary: Get all notes for authenticated user
      tags: [Notes]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Notes retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  notes:
                    type: array
                    items:
                      $ref: "#/components/schemas/Note"
        "404":
          description: No notes found
        "500":
          description: Server error

    post:
      summary: Create a new note
      tags: [Notes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteInput"
      responses:
        "201":
          description: Note created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  note:
                    $ref: "#/components/schemas/Note"
        "401":
          description: Missing title or text
        "500":
          description: Server error

  /notes/search:
    get:
      summary: Search notes by title
      tags: [Notes]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: title
          schema:
            type: string
          required: true
          description: Title keyword to search for
      responses:
        "200":
          description: Matching notes found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  notes:
                    type: array
                    items:
                      $ref: "#/components/schemas/Note"
        "404":
          description: No matching notes
        "500":
          description: Server error

  /notes/{id}:
    put:
      summary: Update a note
      tags: [Notes]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the note to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
      responses:
        "200":
          description: Note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Note"
        "404":
          description: Note not found
        "500":
          description: Server error

    delete:
      summary: Delete a note
      tags: [Notes]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the note to delete
      responses:
        "200":
          description: Note deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Note"
        "404":
          description: Note not found
        "500":
          description: Server error
